---
title:  "TSL"
date:   2023-09-12 11:08:26 +0800
categories: Ssl
---
# TLS 简介
TSL是基于身份认证、数据加密保护数据传输安全的协议。前身为SSL(安全套接字层)。

实现
1. 加密：使用非对称加密传递对称秘钥，使用对称秘钥加密会话数据
2. 完成性校验: 使用MAC对报文进行完整性校验.TLS1.2引入AEAD算法同事完成加密和完整性校验。
3. 身份认证: 基于证书公钥体系

# TLS1.2
## 握手流程
![](/assets/img/tls1-2-shake.png)
1. 	客户端发送clientHello(TSL版本、支持的加密套件、客户端随机数)
2. 	服务器发送serverHello响应(SSL证书、服务器选择的加密套件、服务器随机数)
3. 	客户端验证SSL的合法性，拒绝非法请求
    1. 客户端根据证书链校验CA的合法性
    2. 客户端根据本地的受信任CA列表，校验CA的合法性
    3. 每个证书都会对域名下发，客户端比较请求域名和CA对应的域名，校验证书的合法性
    4. 校验证书是否过期
    5. 根据在线证书状态协议来检查证书是否被吊销
4. 	客户端生成随机字节并用公钥进行加密作为预主秘钥
5. 	服务器使用证书私钥解密得到预主秘钥
6.	生成会话秘钥，服务器和客户端使用客户端随机数+服务器随机数+预主秘钥生成会话秘钥
7.	客户端准备就绪,客户端发送使用会话秘钥加密的Finished消息
8.	服务端准备就绪,服务端发送使用会话秘钥加密的Finished消息
9.	后续通信使用会话秘钥进行数据的安全传输。


# TSL1.3
## 术语
### PSK(pre_shared_key)
1. 为了实现0-RTT，在双方建立链接的时候就已经持有一个对称秘钥，在TLS1.3中叫PSK
2. TLS1.3握手结束后，服务器会发送一个NST(new_session_ticket)报文，该报文记录PSK的值、名字、有效期等信息，下次建立连接可以使用该PSK作为初始秘钥材料
3. PSK是从之前的安全通道获取的，只要双方的PSK一致，不需要证书也可以证明双方的身份(无法防重放)

### HKDF(HMAC_Based_Key_Derivation_Function) - 新密钥导出函数
1. 经密钥雪上得出的秘钥材料随机性不够，协商过程能被感知，需要一种秘钥导出函数从初始密钥材料获取安全性更强的新密钥
2. HKDF就是新密钥导出函数，使用密钥材料、CH哈希值、SH哈希值，得到安全性更强的新密钥

### AEAD(Authenticated_Encrypted_With_Associated_Data) - 唯一保留的加密算法
1. AEAD将完整性校验和数据加密两种功能集成在同一个算法中

## 握手流程
![](/assets/img/tls1-3-shake-1.webp)
* +表示该报文中值得注意的extension
* *表示该内容不一定被发送
* {}表示该内容使用handshake_key加密
* []表示该内容使用application_key加密

详细解读
1. 客户端发送Client Hello（CH）报文，包含有关*密钥协商以及其他与TLS连接建立有关的扩展*给服务端
2. 服务端发送Server Hello（SH）报文，包含有关*密钥协商*的扩展返回给服务端，双方根据CH和SH协商出来密钥材料
3. 根据密钥材料、CH哈希值、SH哈希值使用HKDF计算出handshake_key，用于加密后续握手信息。
4. SH中包含EncryptedExtensions(其他与密钥协商无关的扩展数据)
5. 如果使用公钥进行身份认证，SH需要包含Certificate报文(证书信息)和Certificate Verify(CV)报文给客户端。
6. 如果需要对客户端进行身份认证，SH还需要包含Certificate Request(CR)报文给对方，请求客户端发送证书
7. SH包含Finished报文，表明客户端与服务端握手结束。
8. 客户端收到服务端CR报文,返回自己的Certificate和CV报文
9. 客户端发送Finished报文，表明握手阶段结束，可以开始正式会话通讯。

# TLS1.3与TLS1.2的区别
1. TLS1.2采用2RTT，TLS1.3采用0RTT
2. TLS1.3新增了加密套件(TLS1.2不支持),移除了部分加密套件(TLS1.2支持的)

# 参考资料
https://zhuanlan.zhihu.com/p/28850798